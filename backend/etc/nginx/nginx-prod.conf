# ---------------------------------------------------------------------
# Upstreams
# ---------------------------------------------------------------------
upstream backend_web_upstream {
    server hoboc_web:8000;
}
upstream frontend_upstream {
    server hoboc_frontend:3000;
}

# ---------------------------------------------------------------------
# HTTP → HTTPS Redirect
# ---------------------------------------------------------------------
server {
    listen 80;
    server_name hoboc.ir www.hoboc.ir;
    return 301 https://$host$request_uri;
}

# ---------------------------------------------------------------------
# HTTPS Server Block
# ---------------------------------------------------------------------
server {
    listen 443 ssl http2;
    server_name hoboc.ir www.hoboc.ir;

    # SSL Certificate (Let's Encrypt)
    ssl_certificate     /etc/letsencrypt/live/hoboc.ir/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hoboc.ir/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Timeouts
    client_body_timeout   400;
    client_header_timeout 400;
    send_timeout          400;
    keepalive_timeout     65;
    proxy_send_timeout    400s;
    proxy_read_timeout    400s;
    client_max_body_size  50M;

    # Security Headers
    add_header X-Frame-Options        "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy        "strict-origin-when-cross-origin" always;

    # API → Django Backend
    location /hoboc/ {
        proxy_pass http://backend_web_upstream/hoboc/;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_http_version 1.1;
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Static Files
    location /hoboc/static/ {
        alias /opt/hoboc/static/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    # Media Files
    location /hoboc/media/ {
        alias /opt/hoboc/src/media/;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header Content-Disposition "inline";
        expires 1d;
        add_header Cache-Control "public";
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Frontend → Next.js
    location / {
        proxy_pass http://frontend_upstream;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error Pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html { root /usr/share/nginx/html; }
}
