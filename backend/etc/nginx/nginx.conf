# ---------------------------------------------------------------------
# Upstream configuration
# ---------------------------------------------------------------------

# Django backend upstream (Gunicorn service)
upstream backend_web_upstream {
    server hoboc_web:8000;  # Docker service name + port for backend
}

# Next.js frontend upstream (Node.js dev/production server)
upstream frontend_upstream {
    server hoboc_frontend:3000;  # Docker service name + port for frontend
}

# ---------------------------------------------------------------------
# Main Server Block
# ---------------------------------------------------------------------
server {
    # -------------------------------------------------
    # Listen on HTTP(80) and HTTPS(443) with SSL
    # -------------------------------------------------
    listen 80;
    listen 443 ssl;

    # SSL certificate and key (self-signed for dev, replace in prod)
    ssl_certificate     /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    # -------------------------------------------------
    # Timeout configurations
    # -------------------------------------------------
    client_body_timeout   400;
    client_header_timeout 400;
    send_timeout          400;
    keepalive_timeout     65;
    proxy_send_timeout    400s;
    proxy_read_timeout    400s;

    # Limit request body size (e.g., file uploads)
    client_max_body_size 50M;

    # -------------------------------------------------
    # Security headers
    # -------------------------------------------------
    add_header X-Frame-Options           "SAMEORIGIN";
    add_header X-Content-Type-Options    "nosniff";
    add_header Referrer-Policy           "strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # -------------------------------------------------
    # API Proxy to Django backend (/hoboc/*)
    # -------------------------------------------------
    location /hoboc/ {
        proxy_pass http://backend_web_upstream/hoboc/;

        # Forward client IP and protocol
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;

        # WebSocket support (if needed for API)
        proxy_http_version 1.1;
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # -------------------------------------------------
    # Static files served by Nginx (Django collectstatic output)
    # -------------------------------------------------
    location /hoboc/static/ {
        alias /opt/hoboc/static/;
        expires 1y;
        access_log off;

        add_header Cache-Control "public";
        add_header Access-Control-Allow-Origin "*";
    }

    # -------------------------------------------------
    # Media files (uploaded by users)
    # -------------------------------------------------
    location /hoboc/media/ {
        alias /opt/hoboc/src/media/;

        # CORS settings for media files
        add_header 'Access-Control-Allow-Origin'  '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Serve PDFs inline in browser
        add_header Content-Disposition "inline";

        # Caching
        expires 1d;
        add_header Cache-Control "public";

        # Handle CORS preflight (OPTIONS requests)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # -------------------------------------------------
    # Frontend UI served via Next.js container
    # -------------------------------------------------
    location / {
        proxy_pass http://frontend_upstream;

        # Forward request info
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # -------------------------------------------------
    # Error pages
    # -------------------------------------------------
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
